import{_ as f}from"./ValaxyMain.vue_vue_type_script_setup_true_lang.CefZrO8y.js";import"./chunks/pinia.DsHLo5tT.js";import{e as A,u as P,a as y}from"./chunks/vue-router.Ffbtoo0e.js";import{a7 as p,a8 as h,an as a,V as g,am as t,af as l,aj as e,Z as b}from"./framework.DZImrh0B.js";import"./app.CbS7z7wV.js";import"./chunks/dayjs.BdcnXKr1.js";import"./chunks/vue-i18n.DOs4xXBl.js";/* empty css                    */import"./chunks/nprogress.B6x19dEb.js";import"./content.iwmwugc9.js";import"./router.-rV2tM5K.js";const C=A("/posts/2025-03-06-447",async o=>JSON.parse('{"title":"Init Ability Actor Info","description":"","frontmatter":{"title":"Init Ability Actor Info","date":"2025-03-06","updated":"2025-03-06","categories":["学习笔记","虚幻引擎"],"tags":["C++"]},"headers":[],"relativePath":"pages/posts/2025-03-06-447.md","lastUpdated":1757080456000}'),{lazy:(o,r)=>o.name===r.name}),N={__name:"2025-03-06-447",setup(o,{expose:r}){const{data:i}=C(),u=y(),d=P(),s=Object.assign(d.meta.frontmatter||{},i.value?.frontmatter||{});return u.currentRoute.value.data=i.value,b("valaxy:frontmatter",s),globalThis.$frontmatter=s,r({frontmatter:{title:"Init Ability Actor Info",date:"2025-03-06",updated:"2025-03-06",categories:["学习笔记","虚幻引擎"],tags:["C++"]}}),(n,c)=>{const m=f;return h(),p(m,{frontmatter:g(s)},{"main-content-md":a(()=>[...c[0]||(c[0]=[l("h2",{id:"owneractor-与-avataractor",tabindex:"-1"},[e("OwnerActor 与 AvatarActor "),l("a",{class:"header-anchor",href:"#owneractor-与-avataractor","aria-label":'Permalink to "OwnerActor 与 AvatarActor"'},"​")],-1),l("figure",null,[l("img",{src:"https://img.blueflame.org.cn/images/2025/03/05/67c80e7feba4f.png",alt:"image-20250305164238600",loading:"lazy",decoding:"async",class:"lazy"})],-1),l("p",null,[e("ASC (AbilitySystemComponent) 需要知道自己是在对谁起作用，以及是谁控制着自己，"),l("code",null,"OwnerActor"),e(" 是逻辑上拥有此组件的 actor。"),l("code",null,"AvatarActor"),e(" 是我们正在对其执行操作的物理 actor。通常是一个 Pawn，但它也可能是塔、建筑、炮塔等，可能与 Owner 相同。")],-1),l("ul",null,[l("li",null,[e("对于 AI 控制的角色，如 "),l("code",null,"Enemy Character"),e("，一般是把 ASC 放在 Pawn(Character)上，所以 "),l("code",null,"OwnerActor"),e(" 与 "),l("code",null,"AvatarActor"),e(" 都是 "),l("code",null,"Enemy Character")]),l("li",null,[e("对于玩家控制的角色，可能会将 ASC 放在 Pawn(Character) 上或者 PlayerState 上，对于后者，"),l("code",null,"OwnerActor"),e("就变成了 PlayerState，"),l("code",null,"AvatarActor"),e(" 依旧还是 Pawn(Character)")])],-1),l("p",null,[l("code",null,"InitAbilityActorInfo"),e(" 这个函数就是用来初始化这两个信息，对于不同的情况，初始化的时机也不相同")],-1),l("h2",{id:"initabilityactorinfo-调用时机",tabindex:"-1"},[e("InitAbilityActorInfo 调用时机 "),l("a",{class:"header-anchor",href:"#initabilityactorinfo-调用时机","aria-label":'Permalink to "InitAbilityActorInfo 调用时机"'},"​")],-1),l("figure",null,[l("img",{src:"https://img.blueflame.org.cn/images/2025/03/05/67c812361b319.png",alt:"image-20250305165829006",loading:"lazy",decoding:"async",class:"lazy"})],-1),l("h3",{id:"_1-玩家控制角色-player-controlled",tabindex:"-1"},[l("strong",null,"1. 玩家控制角色（Player-Controlled）"),e(),l("a",{class:"header-anchor",href:"#_1-玩家控制角色-player-controlled","aria-label":'Permalink to "**1. 玩家控制角色（Player-Controlled）**"'},"​")],-1),l("h4",{id:"场景1-asc-在-pawn-上",tabindex:"-1"},[l("strong",null,"场景1：ASC 在 Pawn 上"),e(),l("a",{class:"header-anchor",href:"#场景1-asc-在-pawn-上","aria-label":'Permalink to "**场景1：ASC 在 Pawn 上**"'},"​")],-1),l("ul",null,[l("li",null,[l("strong",null,"服务器端"),e("：在 "),l("code",null,"PossessedBy"),e(" 中调用 "),l("ul",null,[l("li",null,[e("当服务器端的 "),l("code",null,"Controller"),e(" 接管（Possess）一个 "),l("code",null,"Pawn"),e(" 时，"),l("code",null,"PossessedBy"),e(" 事件触发。此时 "),l("code",null,"Pawn"),e(" 已被绑定到 "),l("code",null,"Controller")]),l("li",null,[e("此时初始化 ASC 可确保服务器端的技能权限（如技能冷却、效果应用）正确关联到 "),l("code",null,"Pawn"),e("。")])])]),l("li",null,[l("strong",null,"客户端"),e("：在 "),l("code",null,"AcknowledgePossession"),e(" 中调用 "),l("ul",null,[l("li",null,[e("客户端需要等待服务器确认 "),l("code",null,"Possession"),e(" 完成（通过 "),l("code",null,"AcknowledgePossession"),e("），此时客户端的 "),l("code",null,"Pawn"),e(" 和 "),l("code",null,"Controller"),e(" 已准备就绪。")]),l("li",null,[e("若在客户端过早调用（如 "),l("code",null,"BeginPlay"),e("），可能因网络延迟导致 "),l("code",null,"Controller"),e(" 尚未绑定，从而引发空指针错误。")])])])],-1),l("h4",{id:"场景2-asc-在-playerstate-上",tabindex:"-1"},[l("strong",null,"场景2：ASC 在 PlayerState 上"),e(),l("a",{class:"header-anchor",href:"#场景2-asc-在-playerstate-上","aria-label":'Permalink to "**场景2：ASC 在 PlayerState 上**"'},"​")],-1),l("ul",null,[l("li",null,[l("strong",null,"服务器端"),e("：仍在 "),l("code",null,"PossessedBy"),e(" 中调用 "),l("ul",null,[l("li",null,[l("code",null,"PlayerState"),e(" 在服务器端始终存在，且当 "),l("code",null,"Controller"),e(" 接管 "),l("code",null,"Pawn"),e(" 时，"),l("code",null,"PlayerState"),e(" 已与 "),l("code",null,"Controller"),e(" 关联。")]),l("li",null,[e("此时需将 ASC 的 "),l("code",null,"OwnerActor"),e(" 设为 "),l("code",null,"PlayerState"),e("，"),l("code",null,"AvatarActor"),e(" 设为 "),l("code",null,"Pawn"),e("。")])])]),l("li",null,[l("strong",null,"客户端"),e("：在 "),l("code",null,"OnRep_PlayerState"),e(" 中调用 "),l("ul",null,[l("li",null,[e("客户端的 "),l("code",null,"PlayerState"),e(" 是服务器通过网络复制的，可能不会立即同步到客户端。")]),l("li",null,[e("当 "),l("code",null,"PlayerState"),e(" 完成复制并触发 "),l("code",null,"OnRep_PlayerState"),e(" 回调时，才能安全访问它，从而正确绑定 "),l("code",null,"OwnerActor"),e(" 为 "),l("code",null,"PlayerState"),e("。")])])])],-1),l("hr",null,null,-1),l("h3",{id:"_2-ai-控制角色-ai-controlled",tabindex:"-1"},[l("strong",null,"2. AI 控制角色（AI-Controlled）"),e(),l("a",{class:"header-anchor",href:"#_2-ai-控制角色-ai-controlled","aria-label":'Permalink to "**2. AI 控制角色（AI-Controlled）**"'},"​")],-1),l("h4",{id:"场景-asc-在-pawn-上",tabindex:"-1"},[l("strong",null,"场景：ASC 在 Pawn 上"),e(),l("a",{class:"header-anchor",href:"#场景-asc-在-pawn-上","aria-label":'Permalink to "**场景：ASC 在 Pawn 上**"'},"​")],-1),l("ul",null,[l("li",null,[e("服务器和客户端：均在"),l("code",null,"BeginPlay"),e("中调用 "),l("ul",null,[l("li",null,[e("AI 控制的角色通常没有复杂的 "),l("code",null,"Controller"),e(" 绑定流程（如玩家角色的网络同步）。")]),l("li",null,[e("AI 的 "),l("code",null,"Controller"),e(" 在 "),l("code",null,"Pawn"),e(" 生成时（"),l("code",null,"BeginPlay"),e("）就已存在，无需等待 "),l("code",null,"PossessedBy"),e(" 事件。")]),l("li",null,[e("在 "),l("code",null,"BeginPlay"),e(" 中直接初始化 ASC，可确保 AI 的技能系统立即生效，避免逻辑延迟。")])])])],-1)])]),"main-header":a(()=>[t(n.$slots,"main-header")]),"main-header-after":a(()=>[t(n.$slots,"main-header-after")]),"main-nav":a(()=>[t(n.$slots,"main-nav")]),"main-content-before":a(()=>[t(n.$slots,"main-content-before")]),"main-content":a(()=>[t(n.$slots,"main-content")]),"main-content-after":a(()=>[t(n.$slots,"main-content-after")]),"main-nav-before":a(()=>[t(n.$slots,"main-nav-before")]),"main-nav-after":a(()=>[t(n.$slots,"main-nav-after")]),comment:a(()=>[t(n.$slots,"comment")]),footer:a(()=>[t(n.$slots,"footer")]),aside:a(()=>[t(n.$slots,"aside")]),"aside-custom":a(()=>[t(n.$slots,"aside-custom")]),default:a(()=>[t(n.$slots,"default")]),_:3},8,["frontmatter"])}}};export{N as default,C as usePageData};
